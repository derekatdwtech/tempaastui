trigger:
  branches:
    include:
    - feature/*
    - master

resources:
  - repo: self

variables:
  - group: tempaast-ui


stages:
- stage: Build
  jobs:
  - job: Build
    displayName: Build 
    pool:
      vmImage: 'windows-2019'
      timeoutInMinutes: 10
    steps:
      - checkout: self
        persistCredentials: true

      - bash: |
          npm install
        displayName: "NPM Install"

      - bash: |
          npm run build

      - task: AzureCLI@2
        displayName: Deploy Container
        inputs:
          azureSubscription: dwtech
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            az storage blob delete-batch -s $web --account-name $(storageAccountName) --account-key $(containerKey)
            az storage blob upload-batch -s build/. -d '$web' --account-name $(storageAccountName) --account-key $(containerKey)

      # - task: ArchiveFiles@2
      #   displayName: Collect Build
      #   inputs:
      #     rootFolderOrFile: 'build' 
      #     includeRootFolder: false
      #     archiveType: 'zip' 
      #     archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip' 
      #     replaceExistingArchive: true 
      
      # - task: PublishBuildArtifacts@1
      #   inputs:
      #     pathToPublish: '$(Build.ArtifactStagingDirectory)' 
      #     artifactName: '$(Build.BuildId).zip' 

  # - job: Deploy
  #   displayName: Deploy
  #   dependsOn: 'Build'
  #   pool:
  #     vmImage: 'windows-2019'
  #     timeoutInMinutes: 10
  #   steps:
  #     - task: ExtractFiles@1
  #       displayName: Extract Build Artifact
  #       inputs:
  #         archiveFilePatterns: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip' 
  #         destinationFolder: $(Build.ArtifactStagingDirectory)/deploy
  #         cleanDestinationFolder: true 
  #         overwriteExistingFiles: true
      
      # - task: AzureCLI@2
      #   displayName: Deploy Container
      #   inputs:
      #     azureSubscription: dwtech
      #     scriptType: bash
      #     scriptLocation: inlineScript
      #     inlineScript: |
      #       az storage blob upload-batch -s $(Build.ArtifactStagingDirectory)/deploy/. -d '$web' --account-name $(storageAccountName) --account-key $(containerKey)
              